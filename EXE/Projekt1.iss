; 
; Install Script for ViMod
;  [Inno Setup Toolbar Advanced - Script Wizard]
; 
; Generated by the 'Inno Setup Toolbar Advanced for Visual Basic 6.0'
; Written and Programmed by Brian Haase and Martin Rizal
; 
; Generated for Inno Setup Compiler, Version 4+
; 
  
[Setup]
AppName=ViMod
AppVerName=ViMod 0.3.5
AppPublisher=TNG
AppPublisherURL=https://nicos-alltag.blogspot.com
AppSupportURL=https://nicos-alltag.blogspot.com
AppUpdatesURL=https://nicos-alltag.blogspot.com
DefaultDirName={pf}\ViMod
DefaultGroupName=ViMod
LicenseFile=C:\Users\Nico\Desktop\VbModbus\License.txt
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin
  
[Tasks]
;Installation Task
Name: vb6; Description: Visual Basic 6.0 Core Runtime Library; GroupDescription: Install Component(s):; Check: NeedVB('6.0.98.15');
Name: ado; Description: Microsoft Data Access Components; GroupDescription: Install Component(s):; Check: NeedMdac('4.71.1015.0');
Name: runas; Description: Run program as Administrator; GroupDescription: Program Setting:
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
  
[Files]
;Program files for deployment


;Executable File or Main Component
Source: "ViMod.exe"; DestDir: {app}; Flags: ignoreversion 32bit


;Visual Basic 6.0 Runtime Files
Source: MSVCRT40.DLL; DestDir: {sys}; Flags: onlyifdoesntexist uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEPRO32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: COMCAT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: ASYCFILT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEAUT32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: STDOLE2.TLB; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: msvbvm60.dll; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6


;VB6 Runtime locale
Source: vb6de.dll; DestDir: {sys}; Flags: onlyifdoesntexist uninsneveruninstall sharedfile 32bit allowunsafefiles;


;Dependencies and Files
Source: "msscript.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msscript.ocx'));
Source: "msdbrptr.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msdbrptr.dll'));
Source: "MSStdFmt.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSStdFmt.dll'));
Source: "StdFtDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\StdFtDE.dll'));
Source: "DBRpRDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\DBRpRDE.dll'));
Source: "msderun.dll"; DestDir: {cf}\designer; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{cf}\designer\msderun.dll'));
Source: "msado15.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msado15.dll'));
Source: "dao360.dll"; DestDir: {dao}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{dao}\dao360.dll'));
Source: "MSJet40.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJet40.dll'));
Source: "MSJtEr40.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJtEr40.dll'));
Source: "MSJInt40.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJInt40.dll'));
Source: "VBAJet32.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\VBAJet32.dll'));
Source: "ExpSrv.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\ExpSrv.dll'));
Source: "MSWStr10.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSWStr10.dll'));
Source: "MSWDat10.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSWDat10.dll'));
Source: "MSRD2x40.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSRD2x40.dll'));
Source: "MSRD3x40.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSRD3x40.dll'));
Source: "MsRepl40.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MsRepl40.dll'));
Source: "MSJtEs40.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJtEs40.dll'));
Source: "VB5DB.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\VB5DB.dll'));
Source: "mswinsck.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\mswinsck.ocx'));
Source: "WinSkDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\WinSkDE.dll'));
Source: "richtx32.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\richtx32.ocx'));
Source: "RichEd32.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\RichEd32.dll'));
Source: "RchTxDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\RchTxDE.dll'));
Source: "COMDLG32.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\COMDLG32.OCX'));
Source: "CmDlgDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\CmDlgDE.dll'));
Source: "MSCOMM32.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSCOMM32.OCX'));
Source: "MSComDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSComDE.dll'));
Source: "MSFLXGRD.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSFLXGRD.OCX'));
Source: "FlxGdDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\FlxGdDE.dll'));
Source: "comctl32.Ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\comctl32.Ocx'));
Source: "msinet.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msinet.ocx'));
Source: "InetDE.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\InetDE.dll'));
Source: "FM20.DLL"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\FM20.DLL'));
Source: "Mscomctl.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\Mscomctl.ocx'));
Source: "uText.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\uText.ocx'));
Source: "uList.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\uList.ocx'));
Source: "Button.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\Button.ocx'));
Source: "hilfe.pdf"; DestDir: {app}; Flags: ignoreversion 32bit; Check: FileNotFound(ExpandConstant('{app}\hilfe.pdf'));


;Microsoft Data Access Components Redistributable Installer
Source: "MDAC_TYP.EXE"; DestDir: {tmp}; Flags: deleteafterinstall; Tasks: ado


; NOTE: Don't use "Flags: ignoreversion" on any shared system files
  
[Icons]
;Shortcut Icons
Name: "{userdesktop}\ViMod"; Filename: "{app}\ViMod.exe"; Tasks: desktopicon
  


[Registry]
;For accessing Windows registry
;Run as Admin
Root: HKCU; Subkey: "Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"; ValueType: string; ValueName: "{app}\ViMod.exe"; ValueData: RUNASADMIN; flags: uninsdeletevalue; MinVersion: 0,6.0; Tasks: runas




[Languages]
Name: "de"; MessagesFile: "compiler:Languages\German.isl"


[Run]
;Run misc. process
;Addtional Task


Filename:"{tmp}\MDAC_TYP.EXE"; Parameters: "/Q /C:""setup /QNT"""; WorkingDir:{tmp}; Flags: skipifdoesntexist; Tasks: ado; StatusMsg: Installing Microsoft Data Access Components


[Code]
//For scripting purposes


//Check if File is not found
function FileNotFound(fname: String): Boolean;
begin
 if FileExists(fname) then
 begin
 Result:=False;
 end else
 begin
 Result:=True;
 end;
end;




//This part will check for VB6 Runtime. Algorithm courtesy of ArvyDas


procedure Explode(var Dest: TArrayOfInteger; Text: String; Separator: String);
Var
  i, p: Integer;
begin
i := 0;
repeat
   SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := StrToInt(Copy(Text, 1, p-1));
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := StrToInt(Text);
      Text := '';
    end;
  until Length(Text)=0;
end;


// Function compares version strings numerically:
//     * when v1 = v2, result = 0
//     * when v1 < v2, result = -1
//     * when v1 > v2, result = 1
//
// Supports version numbers with trailing zeroes, for example 1.02.05.
// Supports comparison of two version number of different lengths, for example
//     CompareVersions('1.2', '2.0.3')
// When any of the parameters is '' (empty string) it considers version number as 0


function NeedUpgrade(v1: String; v2: String): Boolean;
Var
  v1parts: TArrayOfInteger;
  v2parts: TArrayOfInteger;
  i: Integer;
begin
  if v1 = '' then
  begin
    v1 := '0';
  end;


  if v2 = '' then
  begin
    v2 := '0';
  end;


  Explode(v1parts, v1, '.');
  Explode(v2parts, v2, '.');


  if (GetArrayLength(v1parts) > GetArrayLength(v2parts)) then
  begin
    SetArrayLength(v2parts, GetArrayLength(v1parts))
  end else if (GetArrayLength(v2parts) > GetArrayLength(v1parts)) then
  begin
   SetArrayLength(v1parts, GetArrayLength(v2parts))
  end;


  for i := 0 to GetArrayLength(v1parts) - 1 do
  begin
    if v1parts[i] > v2parts[i] then
    begin
      // v1 is greater
      Result := True;
      exit;
    end else if v1parts[i] < v2parts[i] then
    begin
      // v2 is greater 
      Result := False;
      exit;
    end;
  end;


  // Are Equal
  Result := False;
end;


//Check VB6 Runtime if not exists or outdated
function NeedVB(ver: String): Boolean;
Var
path: String;
ver2: String;
begin
  path:=ExpandConstant('{sys}\msvbvm60.dll');
  GetVersionNumbersString(path,ver2);
  If FileExists(path) Then
  begin
    If NeedUpgrade(ver, ver2) Then
    begin
      Result:=True;
    end else
    begin
      Result:=False;
    end;
  end else
  begin
    Result:=True;
  end;
end;


//Check if MDAC is not installed or outdated
function NeedMDAC(ver: String): Boolean;
Var
cVer: String;
mdacver: String;
begin
     if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\DataAccess','Version', cVer) then
     begin
         if pos('4.',ver) > 0 then
         begin
         mdacver:='2.0';
         end else if pos('21.',ver) > 0 then
         begin
         mdacver:='2.1';
         end else if pos('25.',ver) > 0 then
         begin
         mdacver:='2.5';
         end else if pos('5.',ver) > 0 then
         begin
         mdacver:='2.6';
         end else if pos('27.',ver) > 0 then
         begin
         mdacver:='2.7';
         end else if pos('28.',ver) > 0 then
         begin
         mdacver:='2.8';
         end else if pos('6.',ver) > 0 then
         begin
         mdacver:='2.8';
         end else
         begin
         mdacver:='2.8';
         end;
             If needupgrade(mdacver, cVer) Then
             begin
             Result:=True;
             end else
             begin
             Result:=False;
             end;
    end else
    begin
    Result:=True;
    end;
end;
